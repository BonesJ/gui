===================================
===================================

Readme for accounting software KIWI

===================================
===================================

Abbreviations:
    -TBI: To be implemented. Refers to changes mentioned but unimplemented.
    -GUI: Graphical user interface 
    -PDF: Portable document format. File with a .pdf extension
    -VHP: Very High priority
    -NHP: Normal-High priority
    -NLP: Normal-Low priority
    -VLP: Very Low priority

Welcome to `Alpha-0.1.1`, your everyday accounting software designed to help 
small businesses and start-ups with little to no knowledge of accounting 
practices. It is designed to keep track of your invoices, estimates, expenses, 
taxes, clients, and cash-flow and display the information in a readable manner. 
It will also generate documents based on the information provided such as 
estimates, invoices and tax returns.

"""TODO list format key:

`-Priority|Issue description.
    >> Issue resolution or Progress made`
"""

TODO:    
    -VHP Implement the tansitive closer sqlite3 virtual table to keep tack of product tree db in backend http://charlesleifer.com/blog/querying-tree-structures-in-sqlite-using-python-and-the-transitive-closure-extension/
    -VHP Replace Treeview with tree-tuto.py so that widget is editable and 
    -VHP|Implement QTreeSelector ASAP.
    
    -VLP|Review GUI and theme to make it more appealing as now it isn't any good.
        >>  Currently in a dark theme w/ blue accents 2/2 said OK, needs tidying
    
    -VHP|Implement bill function  and pdf generation.
        >>  Can produce latex .pdf, should implement table entry into invoice.
            Work has progressed slowly because I am revising a fundamental 
            way of interacting with databases regarding job and bill creation.
    
    -VLP|Implement `expenses` table and `CHARGES` tab.
        >>  Lets finish `Factures` tab first yea ? 
    
    -VLP|Review `PANORAMA` tab to look better.
        >>  TBI
    
    -VLP|Add `MO-GUN` functionality.
        >>  TBI
    
    -VLP|Remove clutter from .css file
        >>  Removed some clutter but haven't really tried bare-boning it...
    
    -NHP|Add a connection to my dropbox for database upload and license key.
        >>  Seems so far far ... far away....
    
    -VHP|Add invoice items table
        >>  Done
    
    -VHP|Add invoice link table
        >>  Done
    
    -VHP|Add word document creation function
        >>  Produces crude document. Prototyping stage 
    
    -NHP|connect all da buttons !
        >>  Most all buttons are connected, spare a few...
    
    -NHP|Connect combobox for bill to update info depending on if it is a
         new bill, bill from job or bill from client.
    
    -VLP|Write some sort of logging function that counts how many times a user
         uses a particular function or button I want to know exactly how they
         use the application so as to optimize it better.
DONE:



TABLE SUMMARY:

        
CREATE TABLE confirmed (
key INTEGER PRIMARY KEY,
client_id INTEGER,
job_id INTEGER,
bill_id INTEGER,
FOREIGN KEY(client_id) REFERENCES client(key),
FOREIGN KEY(job_id) REFERENCES job(key)
FOREIGN KEY(bill_id) REFERENCES bill(key)



CREATE TABLE client (
"key" INTEGER PRIMARY KEY AUTOINCREMENT,
"Code_Client" VARCHAR(30),
"Nom" VARCHAR(30),
"Societe" VARCHAR(30),
"Telephone" VARCHAR(30),
"Factures_Payees" INTEGER(1),
"Factures_Recues" INTEGER(1),
"Email" VARCHAR(40),
UNIQUE ("key") 


CREATE TABLE job (
"key" INTEGER PRIMARY KEY ,
"Code_Job" VARCHAR(9),
"Produit" TEXT,
"Brief" VARCHAR(30),
"Date_Debut" VARCHAR(10),
"Date_Fin" VARCHAR(10),
"Prix" VARCHAR(30),
"Somme_Payee" VARCHAR(30),
UNIQUE ("key")    


CREATE TABLE orders (
key INTEGER PRIMARY KEY,
client_id INTEGER,
job_id INTEGER,
FOREIGN KEY(client_id) REFERENCES client(key),
FOREIGN KEY(job_id) REFERENCES job(key)



CREATE TABLE bill (
"key" INTEGER PRIMARY KEY AUTOINCREMENT,
"Code_Facture" VARCHAR(9),
"Produit" TEXT,
"NAP" VARCHAR(30),
"Date_Facture" VARCHAR(30),
"Date_Paiement" VARCHAR(30),
"Pourcentage_Paye" REAL,
"Statut" VARCHAR(30),
UNIQUE ("key","Code_Facture")
